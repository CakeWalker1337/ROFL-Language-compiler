
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statement_groupleftASSIGNleftLORleftLANDrightLNOTnonassocLTGTGELEEQNEleftBORleftBANDleftPLUSMINUSleftTIMESDIVIDEMODULOIDIVIDEleftINCREMENTDECREMENTnonassocLPARENRPARENnonassocLBRACKETRBRACKETnonassocLBRACERBRACEASSIGN BAND BOR COLON COMMA COMMENT CONST_BOOLEAN CONST_FLOAT CONST_INTEGER CONST_STRING DATATYPE DECL_ARRAY DECL_BOOLEAN DECL_FLOAT DECL_INTEGER DECL_STRING DECREMENT DIVIDE DO DOT ELIF ELSE EQ FUNCTION GE GOTO GT ID IDIVIDE IF INCREMENT LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MODULO NE NEWLINE NULL PLUS RBRACE RBRACKET RETURN RPAREN SEMI SKIP STRUCT TIMES WHILEid : IDconst_type : CONST_FLOAT\n            | CONST_STRING\n            | CONST_INTEGER\n            | CONST_BOOLEAN\n            | NULL\n    const_type : LBRACKET call_args RBRACKETvariable_decl : datatype IDdatatype : DECL_BOOLEAN\n            | DECL_FLOAT\n            | DECL_INTEGER\n            | DECL_STRING\n            | DECL_ARRAY\n    expression : LPAREN expression RPAREN\n            | LBRACE expression RBRACE\n            | LBRACKET expression RBRACKET\n    struct : STRUCT id LBRACE content RBRACEcontent : content func\n            | content variable_decl SEMI\n            | content assignment\n            | variable_decl SEMI\n            | assignment\n            | func\n            | NEWLINE\n            | content NEWLINE\n    assignment : variable_decl ASSIGN expression SEMI\n                | id ASSIGN expression SEMIempty :  func : FUNCTION id LPAREN func_arg RPAREN COLON datatype LBRACE statement_group RBRACE\n\n        func_arg : variable_decl\n                | empty\n                | func_arg COMMA variable_decl\n\n    statement_group : statement_group statement\n            | statement\n    statement : RETURN expression SEMI\n            | expression SEMI\n            | assignment\n            | func\n            | struct\n            | variable_decl SEMI\n            | NEWLINE\n            | statement NEWLINE\n            | condition_statement\n            | condition_full\n            | while_loop\n            | SKIP SEMI\n            | GOTO mark SEMI\n            | comment\n    expression : const_type\n            | id\n            | function_call\n    expression : expression PLUS expression\n            | expression MINUS expression\n            | expression TIMES expression\n            | expression DIVIDE expression\n            | expression MODULO expression\n            | expression IDIVIDE expression\n            | expression BOR expression\n            | expression BAND expression\n            | expression DOT expression\n    expression : expression LT expression\n                | expression GT expression\n                | expression GE expression\n                | expression LE expression\n                | expression EQ expression\n                | expression NE expression\n                | expression LOR expression\n                | expression LAND expression\n                | LNOT expression\n    condition_full : condition_statement else_condcondition_statement : if_cond\n            | condition_statement NEWLINE\n            | condition_statement elif_cond\n    if_cond : IF LPAREN expression RPAREN LBRACE statement_group RBRACEelif_cond : ELIF LPAREN expression RPAREN LBRACE statement_group RBRACEelse_cond : ELSE LBRACE statement_group RBRACEwhile_loop : DO LBRACE statement_group RBRACE WHILE LPAREN expression RPAREN SEMImark : ID COLONcomment : COMMENTcall_args : expression\n        | call_args COMMA expression\n        | emptyfunction_call : id LPAREN call_args RPAREN'
    
_lr_action_items = {'RETURN':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,119,121,123,125,139,142,149,150,155,156,159,160,161,163,164,165,],[3,3,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,3,-35,3,-47,3,-26,3,-27,-76,-17,3,3,3,3,-74,-75,3,3,-77,-29,]),'NEWLINE':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,118,119,121,123,125,131,132,134,135,139,142,143,145,146,147,149,150,153,155,156,159,160,161,163,164,165,],[9,9,42,-37,-38,-39,-41,65,-44,-45,-48,-71,-79,42,-42,-36,-40,-72,-73,-70,-46,9,-35,9,-47,135,9,-26,9,-27,146,-23,-22,-24,-76,-17,-18,-20,-25,-21,9,9,-19,9,9,-74,-75,9,9,-77,-29,]),'SKIP':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,119,121,123,125,139,142,149,150,155,156,159,160,161,163,164,165,],[13,13,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,13,-35,13,-47,13,-26,13,-27,-76,-17,13,13,13,13,-74,-75,13,13,-77,-29,]),'GOTO':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,119,121,123,125,139,142,149,150,155,156,159,160,161,163,164,165,],[14,14,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,14,-35,14,-47,14,-26,14,-27,-76,-17,14,14,14,14,-74,-75,14,14,-77,-29,]),'LPAREN':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,20,22,26,27,29,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,78,79,81,84,85,86,105,106,107,113,119,121,123,125,139,142,148,149,150,154,155,156,159,160,161,163,164,165,],[16,16,-34,16,-37,-38,-39,-41,-43,-44,-45,-48,16,16,16,79,16,-1,-71,-79,85,-33,-42,79,-36,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-40,16,-72,-73,-70,105,-46,16,16,117,16,16,-35,16,16,-47,16,16,-26,16,-27,-76,-17,154,16,16,16,16,16,-74,-75,16,16,-77,-29,]),'LBRACE':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,26,27,28,29,35,36,37,38,39,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,78,79,83,84,85,86,105,106,107,113,119,121,123,125,137,138,139,142,149,150,154,155,156,157,159,160,161,163,164,165,],[17,17,-34,17,-37,-38,-39,-41,-43,-44,-45,-48,17,17,17,17,-1,-71,84,-79,-9,-10,-11,-12,-13,-33,-42,-36,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-40,17,-72,-73,-70,106,-46,17,17,118,17,17,-35,17,17,-47,17,17,-26,17,-27,149,150,-76,-17,17,17,17,17,17,161,-74,-75,17,17,-77,-29,]),'LBRACKET':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,27,29,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,119,121,123,125,139,142,149,150,154,155,156,159,160,161,163,164,165,],[18,18,-34,18,-37,-38,-39,-41,-43,-44,-45,-48,18,18,18,18,-71,-79,-33,-42,-36,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-40,18,-72,-73,-70,-46,18,18,18,18,-35,18,18,-47,18,18,-26,18,-27,-76,-17,18,18,18,18,18,-74,-75,18,18,-77,-29,]),'LNOT':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,27,29,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,119,121,123,125,139,142,149,150,154,155,156,159,160,161,163,164,165,],[22,22,-34,22,-37,-38,-39,-41,-43,-44,-45,-48,22,22,22,22,-71,-79,-33,-42,-36,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-40,22,-72,-73,-70,-46,22,22,22,22,-35,22,22,-47,22,22,-26,22,-27,-76,-17,22,22,22,22,22,-74,-75,22,22,-77,-29,]),'FUNCTION':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,118,119,121,123,125,131,132,134,135,139,142,143,145,146,147,149,150,153,155,156,159,160,161,163,164,165,],[23,23,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,23,-35,23,-47,23,23,-26,23,-27,23,-23,-22,-24,-76,-17,-18,-20,-25,-21,23,23,-19,23,23,-74,-75,23,23,-77,-29,]),'STRUCT':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,119,121,123,125,139,142,149,150,155,156,159,160,161,163,164,165,],[25,25,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,25,-35,25,-47,25,-26,25,-27,-76,-17,25,25,25,25,-74,-75,25,25,-77,-29,]),'DO':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,119,121,123,125,139,142,149,150,155,156,159,160,161,163,164,165,],[28,28,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,28,-35,28,-47,28,-26,28,-27,-76,-17,28,28,28,28,-74,-75,28,28,-77,-29,]),'COMMENT':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,119,121,123,125,139,142,149,150,155,156,159,160,161,163,164,165,],[29,29,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,29,-35,29,-47,29,-26,29,-27,-76,-17,29,29,29,29,-74,-75,29,29,-77,-29,]),'CONST_FLOAT':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,27,29,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,119,121,123,125,139,142,149,150,154,155,156,159,160,161,163,164,165,],[30,30,-34,30,-37,-38,-39,-41,-43,-44,-45,-48,30,30,30,30,-71,-79,-33,-42,-36,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-40,30,-72,-73,-70,-46,30,30,30,30,-35,30,30,-47,30,30,-26,30,-27,-76,-17,30,30,30,30,30,-74,-75,30,30,-77,-29,]),'CONST_STRING':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,27,29,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,119,121,123,125,139,142,149,150,154,155,156,159,160,161,163,164,165,],[31,31,-34,31,-37,-38,-39,-41,-43,-44,-45,-48,31,31,31,31,-71,-79,-33,-42,-36,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-40,31,-72,-73,-70,-46,31,31,31,31,-35,31,31,-47,31,31,-26,31,-27,-76,-17,31,31,31,31,31,-74,-75,31,31,-77,-29,]),'CONST_INTEGER':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,27,29,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,119,121,123,125,139,142,149,150,154,155,156,159,160,161,163,164,165,],[32,32,-34,32,-37,-38,-39,-41,-43,-44,-45,-48,32,32,32,32,-71,-79,-33,-42,-36,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-40,32,-72,-73,-70,-46,32,32,32,32,-35,32,32,-47,32,32,-26,32,-27,-76,-17,32,32,32,32,32,-74,-75,32,32,-77,-29,]),'CONST_BOOLEAN':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,27,29,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,119,121,123,125,139,142,149,150,154,155,156,159,160,161,163,164,165,],[33,33,-34,33,-37,-38,-39,-41,-43,-44,-45,-48,33,33,33,33,-71,-79,-33,-42,-36,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-40,33,-72,-73,-70,-46,33,33,33,33,-35,33,33,-47,33,33,-26,33,-27,-76,-17,33,33,33,33,33,-74,-75,33,33,-77,-29,]),'NULL':([0,1,2,3,5,6,7,9,10,11,12,15,16,17,18,22,27,29,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,119,121,123,125,139,142,149,150,154,155,156,159,160,161,163,164,165,],[34,34,-34,34,-37,-38,-39,-41,-43,-44,-45,-48,34,34,34,34,-71,-79,-33,-42,-36,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-40,34,-72,-73,-70,-46,34,34,34,34,-35,34,34,-47,34,34,-26,34,-27,-76,-17,34,34,34,34,34,-74,-75,34,34,-77,-29,]),'ID':([0,1,2,3,5,6,7,9,10,11,12,14,15,16,17,18,22,23,24,25,27,29,35,36,37,38,39,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,78,79,84,85,86,105,106,107,113,118,119,121,123,125,131,132,134,135,139,142,143,145,146,147,149,150,153,154,155,156,159,160,161,163,164,165,],[26,26,-34,26,-37,-38,-39,-41,-43,-44,-45,72,-48,26,26,26,26,26,82,26,-71,-79,-9,-10,-11,-12,-13,-33,-42,-36,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-40,26,-72,-73,-70,-46,26,26,26,26,-35,26,26,-47,26,26,26,-26,26,-27,26,-23,-22,-24,-76,-17,-18,-20,-25,-21,26,26,-19,26,26,26,-74,-75,26,26,-77,-29,]),'DECL_BOOLEAN':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,117,118,119,121,123,125,131,132,134,135,139,141,142,143,145,146,147,149,150,151,153,155,156,159,160,161,163,164,165,],[35,35,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,35,-35,35,-47,35,35,35,-26,35,-27,35,-23,-22,-24,-76,35,-17,-18,-20,-25,-21,35,35,35,-19,35,35,-74,-75,35,35,-77,-29,]),'DECL_FLOAT':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,117,118,119,121,123,125,131,132,134,135,139,141,142,143,145,146,147,149,150,151,153,155,156,159,160,161,163,164,165,],[36,36,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,36,-35,36,-47,36,36,36,-26,36,-27,36,-23,-22,-24,-76,36,-17,-18,-20,-25,-21,36,36,36,-19,36,36,-74,-75,36,36,-77,-29,]),'DECL_INTEGER':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,117,118,119,121,123,125,131,132,134,135,139,141,142,143,145,146,147,149,150,151,153,155,156,159,160,161,163,164,165,],[37,37,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,37,-35,37,-47,37,37,37,-26,37,-27,37,-23,-22,-24,-76,37,-17,-18,-20,-25,-21,37,37,37,-19,37,37,-74,-75,37,37,-77,-29,]),'DECL_STRING':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,117,118,119,121,123,125,131,132,134,135,139,141,142,143,145,146,147,149,150,151,153,155,156,159,160,161,163,164,165,],[38,38,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,38,-35,38,-47,38,38,38,-26,38,-27,38,-23,-22,-24,-76,38,-17,-18,-20,-25,-21,38,38,38,-19,38,38,-74,-75,38,38,-77,-29,]),'DECL_ARRAY':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,117,118,119,121,123,125,131,132,134,135,139,141,142,143,145,146,147,149,150,151,153,155,156,159,160,161,163,164,165,],[39,39,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,39,-35,39,-47,39,39,39,-26,39,-27,39,-23,-22,-24,-76,39,-17,-18,-20,-25,-21,39,39,39,-19,39,39,-74,-75,39,39,-77,-29,]),'IF':([0,1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,84,86,106,107,119,121,123,125,139,142,149,150,155,156,159,160,161,163,164,165,],[40,40,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,40,-35,40,-47,40,-26,40,-27,-76,-17,40,40,40,40,-74,-75,40,40,-77,-29,]),'$end':([1,2,5,6,7,9,10,11,12,15,27,29,41,42,45,63,65,66,67,70,86,107,121,125,139,142,159,160,164,165,],[0,-34,-37,-38,-39,-41,-43,-44,-45,-48,-71,-79,-33,-42,-36,-40,-72,-73,-70,-46,-35,-47,-26,-27,-76,-17,-74,-75,-77,-29,]),'RBRACE':([2,5,6,7,9,10,11,12,15,19,21,26,27,29,30,31,32,33,34,41,42,44,45,63,65,66,67,70,74,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,109,110,111,112,119,121,123,125,126,131,132,134,135,139,142,143,145,146,147,153,155,156,159,160,163,164,165,],[-34,-37,-38,-39,-41,-43,-44,-45,-48,-49,-51,-1,-71,-79,-2,-3,-4,-5,-6,-33,-42,-50,-36,-40,-72,-73,-70,-46,110,-69,-35,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-47,-14,-15,-16,-7,136,-26,139,-27,-83,142,-23,-22,-24,-76,-17,-18,-20,-25,-21,-19,159,160,-74,-75,165,-77,-29,]),'SEMI':([4,8,13,19,20,21,26,30,31,32,33,34,43,44,71,80,82,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,110,111,112,114,126,133,144,162,],[45,63,70,-49,-50,-51,-1,-2,-3,-4,-5,-6,86,-50,107,-69,-8,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,121,-78,-14,-15,-16,-7,125,-83,147,153,164,]),'PLUS':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[46,-49,-50,-51,-1,-2,-3,-4,-5,-6,46,-50,46,46,46,46,-52,-53,-54,-55,-56,-57,46,46,46,46,46,46,46,46,46,46,46,46,-14,-15,-16,-7,46,46,46,46,46,-83,46,]),'MINUS':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[47,-49,-50,-51,-1,-2,-3,-4,-5,-6,47,-50,47,47,47,47,-52,-53,-54,-55,-56,-57,47,47,47,47,47,47,47,47,47,47,47,47,-14,-15,-16,-7,47,47,47,47,47,-83,47,]),'TIMES':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[48,-49,-50,-51,-1,-2,-3,-4,-5,-6,48,-50,48,48,48,48,48,48,-54,-55,-56,-57,48,48,48,48,48,48,48,48,48,48,48,48,-14,-15,-16,-7,48,48,48,48,48,-83,48,]),'DIVIDE':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[49,-49,-50,-51,-1,-2,-3,-4,-5,-6,49,-50,49,49,49,49,49,49,-54,-55,-56,-57,49,49,49,49,49,49,49,49,49,49,49,49,-14,-15,-16,-7,49,49,49,49,49,-83,49,]),'MODULO':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[50,-49,-50,-51,-1,-2,-3,-4,-5,-6,50,-50,50,50,50,50,50,50,-54,-55,-56,-57,50,50,50,50,50,50,50,50,50,50,50,50,-14,-15,-16,-7,50,50,50,50,50,-83,50,]),'IDIVIDE':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[51,-49,-50,-51,-1,-2,-3,-4,-5,-6,51,-50,51,51,51,51,51,51,-54,-55,-56,-57,51,51,51,51,51,51,51,51,51,51,51,51,-14,-15,-16,-7,51,51,51,51,51,-83,51,]),'BOR':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[52,-49,-50,-51,-1,-2,-3,-4,-5,-6,52,-50,52,52,52,52,-52,-53,-54,-55,-56,-57,-58,-59,52,52,52,52,52,52,52,52,52,52,-14,-15,-16,-7,52,52,52,52,52,-83,52,]),'BAND':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[53,-49,-50,-51,-1,-2,-3,-4,-5,-6,53,-50,53,53,53,53,-52,-53,-54,-55,-56,-57,53,-59,53,53,53,53,53,53,53,53,53,53,-14,-15,-16,-7,53,53,53,53,53,-83,53,]),'DOT':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[54,-49,-50,-51,-1,-2,-3,-4,-5,-6,54,-50,54,54,54,-69,-52,-53,-54,-55,-56,-57,-58,-59,54,-61,-62,-63,-64,-65,-66,-67,-68,54,-14,-15,-16,-7,54,54,54,54,54,-83,54,]),'LT':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[55,-49,-50,-51,-1,-2,-3,-4,-5,-6,55,-50,55,55,55,55,-52,-53,-54,-55,-56,-57,-58,-59,55,None,None,None,None,None,None,55,55,55,-14,-15,-16,-7,55,55,55,55,55,-83,55,]),'GT':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[56,-49,-50,-51,-1,-2,-3,-4,-5,-6,56,-50,56,56,56,56,-52,-53,-54,-55,-56,-57,-58,-59,56,None,None,None,None,None,None,56,56,56,-14,-15,-16,-7,56,56,56,56,56,-83,56,]),'GE':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[57,-49,-50,-51,-1,-2,-3,-4,-5,-6,57,-50,57,57,57,57,-52,-53,-54,-55,-56,-57,-58,-59,57,None,None,None,None,None,None,57,57,57,-14,-15,-16,-7,57,57,57,57,57,-83,57,]),'LE':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[58,-49,-50,-51,-1,-2,-3,-4,-5,-6,58,-50,58,58,58,58,-52,-53,-54,-55,-56,-57,-58,-59,58,None,None,None,None,None,None,58,58,58,-14,-15,-16,-7,58,58,58,58,58,-83,58,]),'EQ':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[59,-49,-50,-51,-1,-2,-3,-4,-5,-6,59,-50,59,59,59,59,-52,-53,-54,-55,-56,-57,-58,-59,59,None,None,None,None,None,None,59,59,59,-14,-15,-16,-7,59,59,59,59,59,-83,59,]),'NE':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[60,-49,-50,-51,-1,-2,-3,-4,-5,-6,60,-50,60,60,60,60,-52,-53,-54,-55,-56,-57,-58,-59,60,None,None,None,None,None,None,60,60,60,-14,-15,-16,-7,60,60,60,60,60,-83,60,]),'LOR':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[61,-49,-50,-51,-1,-2,-3,-4,-5,-6,61,-50,61,61,61,-69,-52,-53,-54,-55,-56,-57,-58,-59,61,-61,-62,-63,-64,-65,-66,-67,-68,61,-14,-15,-16,-7,61,61,61,61,61,-83,61,]),'LAND':([4,19,20,21,26,30,31,32,33,34,43,44,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,114,116,120,122,124,126,158,],[62,-49,-50,-51,-1,-2,-3,-4,-5,-6,62,-50,62,62,62,-69,-52,-53,-54,-55,-56,-57,-58,-59,62,-61,-62,-63,-64,-65,-66,62,-68,62,-14,-15,-16,-7,62,62,62,62,62,-83,62,]),'ASSIGN':([8,20,26,82,130,133,144,],[64,78,-1,-8,78,64,64,]),'ELIF':([10,27,65,66,159,160,],[68,-71,-72,-73,-74,-75,]),'ELSE':([10,27,65,66,159,160,],[69,-71,-72,-73,-74,-75,]),'RBRACKET':([18,19,21,26,30,31,32,33,34,44,75,76,77,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,111,112,124,126,],[-28,-49,-51,-1,-2,-3,-4,-5,-6,-50,111,112,-82,-69,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-14,-15,-16,-7,-81,-83,]),'COMMA':([18,19,21,26,30,31,32,33,34,44,75,76,77,79,80,82,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,111,112,115,116,117,124,126,127,128,129,152,],[-28,-49,-51,-1,-2,-3,-4,-5,-6,-50,-80,113,-82,-28,-69,-8,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-14,-15,-16,-7,113,-80,-28,-81,-83,141,-30,-31,-32,]),'RPAREN':([19,21,26,30,31,32,33,34,44,73,77,79,80,82,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,111,112,115,116,117,120,122,124,126,127,128,129,152,158,],[-49,-51,-1,-2,-3,-4,-5,-6,-50,109,-82,-28,-69,-8,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-14,-15,-16,-7,126,-80,-28,137,138,-81,-83,140,-30,-31,-32,162,]),'COLON':([72,140,],[108,151,]),'WHILE':([136,],[148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_group':([0,84,106,149,150,161,],[1,119,123,155,156,163,]),'statement':([0,1,84,106,119,123,149,150,155,156,161,163,],[2,41,2,2,41,41,2,2,41,41,2,41,]),'expression':([0,1,3,16,17,18,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,78,79,84,85,105,106,113,119,123,149,150,154,155,156,161,163,],[4,4,43,73,74,75,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,4,120,122,4,124,4,4,4,4,158,4,4,4,4,]),'assignment':([0,1,84,106,118,119,123,131,149,150,155,156,161,163,],[5,5,5,5,134,5,5,145,5,5,5,5,5,5,]),'func':([0,1,84,106,118,119,123,131,149,150,155,156,161,163,],[6,6,6,6,132,6,6,143,6,6,6,6,6,6,]),'struct':([0,1,84,106,119,123,149,150,155,156,161,163,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'variable_decl':([0,1,84,106,117,118,119,123,131,141,149,150,155,156,161,163,],[8,8,8,8,128,133,8,8,144,152,8,8,8,8,8,8,]),'condition_statement':([0,1,84,106,119,123,149,150,155,156,161,163,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'condition_full':([0,1,84,106,119,123,149,150,155,156,161,163,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'while_loop':([0,1,84,106,119,123,149,150,155,156,161,163,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'comment':([0,1,84,106,119,123,149,150,155,156,161,163,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'const_type':([0,1,3,16,17,18,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,78,79,84,85,105,106,113,119,123,149,150,154,155,156,161,163,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'id':([0,1,3,16,17,18,22,23,25,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,78,79,84,85,105,106,113,118,119,123,131,149,150,154,155,156,161,163,],[20,20,44,44,44,44,44,81,83,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,20,44,44,20,44,130,20,20,130,20,20,44,20,20,20,20,]),'function_call':([0,1,3,16,17,18,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,78,79,84,85,105,106,113,119,123,149,150,154,155,156,161,163,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'datatype':([0,1,84,106,117,118,119,123,131,141,149,150,151,155,156,161,163,],[24,24,24,24,24,24,24,24,24,24,24,24,157,24,24,24,24,]),'if_cond':([0,1,84,106,119,123,149,150,155,156,161,163,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'elif_cond':([10,],[66,]),'else_cond':([10,],[67,]),'mark':([14,],[71,]),'call_args':([18,79,],[76,115,]),'empty':([18,79,117,],[77,77,129,]),'func_arg':([117,],[127,]),'content':([118,],[131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_group","S'",1,None,None,None),
  ('id -> ID','id',1,'p_id','yacc.py',48),
  ('const_type -> CONST_FLOAT','const_type',1,'p_const_values','yacc.py',56),
  ('const_type -> CONST_STRING','const_type',1,'p_const_values','yacc.py',57),
  ('const_type -> CONST_INTEGER','const_type',1,'p_const_values','yacc.py',58),
  ('const_type -> CONST_BOOLEAN','const_type',1,'p_const_values','yacc.py',59),
  ('const_type -> NULL','const_type',1,'p_const_values','yacc.py',60),
  ('const_type -> LBRACKET call_args RBRACKET','const_type',3,'p_const_arr','yacc.py',66),
  ('variable_decl -> datatype ID','variable_decl',2,'p_variable','yacc.py',71),
  ('datatype -> DECL_BOOLEAN','datatype',1,'p_datatypes','yacc.py',79),
  ('datatype -> DECL_FLOAT','datatype',1,'p_datatypes','yacc.py',80),
  ('datatype -> DECL_INTEGER','datatype',1,'p_datatypes','yacc.py',81),
  ('datatype -> DECL_STRING','datatype',1,'p_datatypes','yacc.py',82),
  ('datatype -> DECL_ARRAY','datatype',1,'p_datatypes','yacc.py',83),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_delimiters','yacc.py',89),
  ('expression -> LBRACE expression RBRACE','expression',3,'p_delimiters','yacc.py',90),
  ('expression -> LBRACKET expression RBRACKET','expression',3,'p_delimiters','yacc.py',91),
  ('struct -> STRUCT id LBRACE content RBRACE','struct',5,'p_struct','yacc.py',97),
  ('content -> content func','content',2,'p_content','yacc.py',102),
  ('content -> content variable_decl SEMI','content',3,'p_content','yacc.py',103),
  ('content -> content assignment','content',2,'p_content','yacc.py',104),
  ('content -> variable_decl SEMI','content',2,'p_content','yacc.py',105),
  ('content -> assignment','content',1,'p_content','yacc.py',106),
  ('content -> func','content',1,'p_content','yacc.py',107),
  ('content -> NEWLINE','content',1,'p_content','yacc.py',108),
  ('content -> content NEWLINE','content',2,'p_content','yacc.py',109),
  ('assignment -> variable_decl ASSIGN expression SEMI','assignment',4,'p_assignment','yacc.py',118),
  ('assignment -> id ASSIGN expression SEMI','assignment',4,'p_assignment','yacc.py',119),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',127),
  ('func -> FUNCTION id LPAREN func_arg RPAREN COLON datatype LBRACE statement_group RBRACE','func',10,'p_func','yacc.py',132),
  ('func_arg -> variable_decl','func_arg',1,'p_func','yacc.py',134),
  ('func_arg -> empty','func_arg',1,'p_func','yacc.py',135),
  ('func_arg -> func_arg COMMA variable_decl','func_arg',3,'p_func','yacc.py',136),
  ('statement_group -> statement_group statement','statement_group',2,'p_statement_group','yacc.py',162),
  ('statement_group -> statement','statement_group',1,'p_statement_group','yacc.py',163),
  ('statement -> RETURN expression SEMI','statement',3,'p_statement','yacc.py',172),
  ('statement -> expression SEMI','statement',2,'p_statement','yacc.py',173),
  ('statement -> assignment','statement',1,'p_statement','yacc.py',174),
  ('statement -> func','statement',1,'p_statement','yacc.py',175),
  ('statement -> struct','statement',1,'p_statement','yacc.py',176),
  ('statement -> variable_decl SEMI','statement',2,'p_statement','yacc.py',177),
  ('statement -> NEWLINE','statement',1,'p_statement','yacc.py',178),
  ('statement -> statement NEWLINE','statement',2,'p_statement','yacc.py',179),
  ('statement -> condition_statement','statement',1,'p_statement','yacc.py',180),
  ('statement -> condition_full','statement',1,'p_statement','yacc.py',181),
  ('statement -> while_loop','statement',1,'p_statement','yacc.py',182),
  ('statement -> SKIP SEMI','statement',2,'p_statement','yacc.py',183),
  ('statement -> GOTO mark SEMI','statement',3,'p_statement','yacc.py',184),
  ('statement -> comment','statement',1,'p_statement','yacc.py',185),
  ('expression -> const_type','expression',1,'p_literal_expressions','yacc.py',196),
  ('expression -> id','expression',1,'p_literal_expressions','yacc.py',197),
  ('expression -> function_call','expression',1,'p_literal_expressions','yacc.py',198),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','yacc.py',204),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','yacc.py',205),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','yacc.py',206),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','yacc.py',207),
  ('expression -> expression MODULO expression','expression',3,'p_binary_operators','yacc.py',208),
  ('expression -> expression IDIVIDE expression','expression',3,'p_binary_operators','yacc.py',209),
  ('expression -> expression BOR expression','expression',3,'p_binary_operators','yacc.py',210),
  ('expression -> expression BAND expression','expression',3,'p_binary_operators','yacc.py',211),
  ('expression -> expression DOT expression','expression',3,'p_binary_operators','yacc.py',212),
  ('expression -> expression LT expression','expression',3,'p_logic_expressions','yacc.py',239),
  ('expression -> expression GT expression','expression',3,'p_logic_expressions','yacc.py',240),
  ('expression -> expression GE expression','expression',3,'p_logic_expressions','yacc.py',241),
  ('expression -> expression LE expression','expression',3,'p_logic_expressions','yacc.py',242),
  ('expression -> expression EQ expression','expression',3,'p_logic_expressions','yacc.py',243),
  ('expression -> expression NE expression','expression',3,'p_logic_expressions','yacc.py',244),
  ('expression -> expression LOR expression','expression',3,'p_logic_expressions','yacc.py',245),
  ('expression -> expression LAND expression','expression',3,'p_logic_expressions','yacc.py',246),
  ('expression -> LNOT expression','expression',2,'p_logic_expressions','yacc.py',247),
  ('condition_full -> condition_statement else_cond','condition_full',2,'p_full_condition','yacc.py',271),
  ('condition_statement -> if_cond','condition_statement',1,'p_conditions','yacc.py',275),
  ('condition_statement -> condition_statement NEWLINE','condition_statement',2,'p_conditions','yacc.py',276),
  ('condition_statement -> condition_statement elif_cond','condition_statement',2,'p_conditions','yacc.py',277),
  ('if_cond -> IF LPAREN expression RPAREN LBRACE statement_group RBRACE','if_cond',7,'p_if_cond','yacc.py',289),
  ('elif_cond -> ELIF LPAREN expression RPAREN LBRACE statement_group RBRACE','elif_cond',7,'p_elif_cond','yacc.py',294),
  ('else_cond -> ELSE LBRACE statement_group RBRACE','else_cond',4,'p_else_cond','yacc.py',299),
  ('while_loop -> DO LBRACE statement_group RBRACE WHILE LPAREN expression RPAREN SEMI','while_loop',9,'p_loop','yacc.py',304),
  ('mark -> ID COLON','mark',2,'p_mark','yacc.py',309),
  ('comment -> COMMENT','comment',1,'p_comments','yacc.py',314),
  ('call_args -> expression','call_args',1,'p_call_args','yacc.py',319),
  ('call_args -> call_args COMMA expression','call_args',3,'p_call_args','yacc.py',320),
  ('call_args -> empty','call_args',1,'p_call_args','yacc.py',321),
  ('function_call -> id LPAREN call_args RPAREN','function_call',4,'p_call','yacc.py',329),
]
