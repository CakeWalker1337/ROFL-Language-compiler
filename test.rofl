struct str {
int mem;
}

function quicksort(str[] s, int left, int right) : void {
    int i = left;
    int j = right;
    int tmp;
    int pivot = s[(left + right) / 2].mem;
    while(i <= j){
        while(s[i].mem < pivot){
            i = i + 1;
        }
        while(s[j].mem > pivot){
            j = j - 1;
        }
        if(i <= j){
            tmp = s[i].mem;
            s[i].mem = s[j].mem;
            s[j].mem = tmp;
            i = i + 1;
            j = j - 1;
        }
    }
    if (left < j){
        quicksort(s, left, j);
    }
    if(i<right){
        quicksort(s, i, right);
    }
    return;
}

str[] s = str[](10);
s[0].mem = 3;
s[1].mem = 1;
s[2].mem = 4;
s[3].mem = 9;
s[4].mem = 2;
s[5].mem = 8;
s[6].mem = 6;
s[7].mem = 7;
s[8].mem = 5;
s[9].mem = 10;

print("Input:");

int count = 0;
while(count<10){
    print(s[count].mem);
    count = count + 1;
}

quicksort(s, 0, 9);

print("Result");
count = 0;
while(count<10){
    print(s[count].mem);
    count = count + 1;
}



